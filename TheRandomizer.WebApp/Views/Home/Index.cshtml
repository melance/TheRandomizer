@model TheRandomizer.WebApp.Models.SearchModel

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Generators</h2>
@using (Html.BeginForm())
{
<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading clearfix">
            <a href="#" data-toggle="collapse" data-target="#SearchCriteria" style="color: black;"><b class="panel-title">Criteria</b></a>
            <div class="btn-group-sm pull-right">
                <button id="Search" type="submit" class="btn btn-default" title="Create new Generator"><span class="glyphicon glyphicon-search"></span> Search</button>
            </div>
        </div>
        <div class="panel-body panel-collapse collapse in" id="SearchCriteria">
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                    <div id="Tags" class="btn-group col-md-10" data-toggle="buttons">
                        @foreach (var tag in Model.Tags)
                        {
                            <label class="btn btn-default @(tag.Value ? "active" : "")">
                                <input name="@("tag" + tag.Key)" type="checkbox" @(tag.Value ? "checked" : "") autocomplete="off" /> @tag.Key
                            </label>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "input-control col-md-10", @title = "Search for generators whose name contains this value." })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.FavoritesOnly, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                    <input type="checkbox" name="FavoritesOnly" class="btn btn-default col-md-10" @(Model.FavoritesOnly ? "checked" : "") data-toggle="toggle" data-on="Yes" data-off="No" />
                </div>
            </div>
        </div>
    </div>
</div>
}

<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading clearfix">
            <b class="panel-title">Generators</b>
            <div class="btn-group-sm pull-right">
                <a href="~/UserContent/SelectGeneratorType" id="AddGenerator" type="button" class="btn btn-default" title="Create new Generator"><span class="glyphicon glyphicon-plus"></span> Create</a>
            </div>
        </div>
        <div class="panel-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th class="col-md-2">
                            @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                        </th>
                        <th class="col-md-5">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label" })
                        </th>
                        <th class="col-md-4">
                            @Html.Label("Tags", htmlAttributes: new { @class = "control-label" })
                        </th>
                        <th class="col-md-1">
                            &nbsp;
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @Html.DisplayFor(model => model.Results)
                </tbody>
            </table>
            <div class="row">
                <div class="col-md-8">
                    <div class="btn-group">
                        <button name="PageFirst" class="btn btn-default" @(Model.Page == 1 ? "disabled" : "")>&laquo;</button>
                        <button name="PagePrevious" class="btn btn-default" @(Model.Page == 1 ? "disabled" : "")>&lsaquo;</button>
                        @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            var isCurrentPage = Model.Page == i;
                        
                            <button class="btn @(isCurrentPage ? "btn-primary" : "btn-default")" @(isCurrentPage ? "disabled" : "") name="page" data-page="@i.ToString()">@i.ToString()</button>
                        }
                        <button name="PageNext" class="btn btn-default" @(Model.Page == Model.TotalPages ? "disabled" : "")>&rsaquo;</button>                        
                        <button name="PageLast" class="btn btn-default" @(Model.Page == Model.TotalPages ? "disabled" : "")>&raquo;</button>
                    </div>
                </div>
                <div class="col-md-4">

                </div>
            </div>
        </div>
    </div>
</div>

<script>

</script>