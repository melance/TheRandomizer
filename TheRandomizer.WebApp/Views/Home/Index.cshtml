@model TheRandomizer.WebApp.Models.SearchModel
@using TheRandomizer.WebApp.Controllers

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section TRStyles {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.3.1/css/buttons.bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css">
}

@section TRScripts {
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.3.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/responsive/2.1.1/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/responsive/2.1.1/js/responsive.bootstrap.min.js"></script>
}

<h2>Generators</h2>
@using (Html.BeginForm())
{
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <b class="panel-title">Criteria</b>
                <a href="#" data-toggle="collapse" data-target="#SearchCriteria" style="color: black;"><span id="CollapseSearchIcon"></span></a>
                <div class="btn-group-sm pull-right">
                    <button id="Search" type="submit" class="btn btn-default" title=""><span class="glyphicon glyphicon-search"></span> Search</button>
                </div>
            </div>
            <div class="panel-body panel-collapse collapse in" id="SearchCriteria">
                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                        <div id="Tags" class="col-md-10" data-toggle="buttons">
                            @if (Model.Tags.Count() == 0)
                            {
                                <label class="text-danger">No Tags Available</label>
                            }
                            @foreach (var tag in Model.Tags)
                            {
                                <label class="btn btn-default @(tag.Value ? "active" : "")">
                                    <input name="@("tag" + tag.Key)" type="checkbox" @(tag.Value ? "checked" : "") autocomplete="off" /> @tag.Key
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <fieldset class="form-inline">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control col-md-10", title = "Search for generators whose name contains this value." })
                        </fieldset>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <fieldset class="form-inline">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                            @Html.DropDownListFor(model => model.Author, HomeController.GetAuthors(), htmlAttributes: new { @class = "form-control col-md-10", @title = "Search for generators by this author." })
                        </fieldset>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <fieldset class="form-inline">
                            @Html.LabelFor(model => model.OpenNewTab, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                            <input type="checkbox" id="OpenNewTab" name="OpenNewTab" class="btn btn-default col-md-10" @(Model.OpenNewTab ? "checked" : "") data-toggle="toggle" data-on="New Tab" data-off="This Tab" />
                        </fieldset>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12 @(User.Identity.IsAuthenticated ? "" : "hidden")">
                        @Html.LabelFor(model => model.FavoritesOnly, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                        <input type="checkbox" id="FavoritesOnly" name="FavoritesOnly" class="btn btn-default col-md-10" @(Model.FavoritesOnly ? "checked" : "") data-toggle="toggle" data-on="Yes" data-off="No" />
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.IncludeLibraries, htmlAttributes: new { @class = "control-label text-left col-md-2" })
                        <input type="checkbox" id="IncludeLibraries" name="IncludeLibraries" class="btn btn-default col-md-10" @(Model.IncludeLibraries ? "checked" : "") data-toggle="toggle" data-on="Yes" data-off="No" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <b class="panel-title">Generators</b>
                @if (Request.IsAuthenticated)
                {
                    <div class="btn-group btn-group-sm pull-right">
                        <a href="~/UserContent/SelectGeneratorType" id="AddGenerator" type="button" class="btn btn-default" title="Create new Generator"><span class="glyphicon glyphicon-plus"></span> Create</a>
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" id="GeneratorType">
                            @foreach (var generator in UserContentController.GeneratorTypes)
                            {
                                <li>@Html.ActionLink(generator.Name, generator.Action, "UserContent")</li>
                            }
                        </ul>
                    </div>
                }
            </div>
            <div class="panel-body">
                @if (Model.Results.Count == 0)
                {
                    <table class="table table-striped" id="results" hidden></table>
                    <div class="text-danger text-center"><b>No Generators Found</b></div>
                }
                else
                {
                    <table class="table table-striped" id="results" data-searching="false" data-paging-type="first_last_numbers" data-state-save="true" data-length-menu="[[ 5, 10, 25, 50, -1],[ 5, 10, 25, 50, &quot;All&quot;]]" data-page-length="25" data-responsive="true">
                        <thead>
                            <tr>
                                <th class="col-md-3">
                                    @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                </th>
                                <th class="col-md-4">
                                    @Html.Label("Description", htmlAttributes: new { @class = "control-label" })
                                </th>
                                <th class="col-md-3" data-orderable="false">
                                    @Html.Label("Tags", htmlAttributes: new { @class = "control-label" })
                                </th>
                                <th class="col-md-2" data-orderable="false">
                                    &nbsp;
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @Html.DisplayFor(model => model.Results)
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        var openNewTab = Cookies.get("OpenNewTab");
        var favoritesOnly = Cookies.get("favoritesOnly");

        $("#results").DataTable();

        if (openNewTab != undefined) {
            $("#OpenNewTab").bootstrapToggle(openNewTab);
        }

        SetLinkTarget($("#OpenNewTab").prop("checked"));

        if (favoritesOnly != undefined) {
            $("#FavoritesOnly").bootstrapToggle(favoritesOnly);
        }

        $("#Search").click(function () {
            Cookies.set("OpenNewTab", $("#OpenNewTab").val())
        })

        $("[name = 'ChangePage']").click(function () {
            $("#Page").val($(this).data("page"));
        })

        $("#ChangePageSize").change(function () {
            $("#PageSize").val($(this).val());
            $("#Page").val(1);
            this.form.submit();
        })

        $("[name = 'OpenNewTab'").change(function () {
            SetLinkTarget(this.checked);
        })

        function SetLinkTarget(openNewTab) {
            var links = $('[name = "OpenGenerator"');
            for (let link of links)
            {
                link.target = openNewTab ? "_blank" : "_self";
            }
        }

        $("[name = 'ToggleFavorite']").click(function () {
            var span = $(this);
            var id = span.data("id");
            var isFavorite = !Boolean(span.data("isFavorite"));
            var data = { id: id, isFavorite: isFavorite };
            $.ajax({
                url: "/Home/SetFavorite",
                data: data,
                type: "POST",
                success: function (result) {
                    span.data("isFavorite", result);
                    if (result) {
                        span.removeClass("glyphicon-star-empty");
                        span.addClass("glyphicon-star");
                        span.attr("title", "Click to remove this generator from your favorites.");
                    }
                    else {
                        span.removeClass("glyphicon-star");
                        span.addClass("glyphicon-star-empty");
                        span.attr("title", "Click to add this generator from your favorites.");
                    }
                }
            })
            return false;
        })

        RegisterCollapseElement("#SearchCriteria", "#CollapseSearchIcon");
    })
</script>