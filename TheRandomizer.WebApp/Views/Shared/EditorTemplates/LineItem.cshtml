@model TheRandomizer.Generators.Assignment.LineItem

<div class="form-group row" name="LineItem" data-item-row>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control col-md-10", @title = "The name of the item." })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-1">
        @Html.TextBoxFor(model => model.Weight, htmlAttributes: new { @class = "form-control", @type = "number", @min = "1", @title = "The weight for this item when selecting from this item name list." })
        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.Next, htmlAttributes: new { @class = "form-control", @title = "The next item to use after this one is evaluated." })
        @Html.ValidationMessageFor(model => model.Next, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.Variable, htmlAttributes: new { @class = "form-control", @title = "The name of the variable to store the result in." })
        @Html.ValidationMessageFor(model => model.Variable, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-4">
        @Html.TextAreaFor(model => model.Expression, htmlAttributes: new { @class = "form-control", @rows = 1, @style = "max-width: 100%", @title = "The expression to evaluate when this item is selected." })
        @Html.ValidationMessageFor(model => model.Expression, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-1">
        <button type="button" name="DeleteItem" class="btn btn-default btn-sm" data-toggle="DeleteItem" title="Delete Parameter"><span class="glyphicon glyphicon-remove"></span></button>
        <div class="btn-group btn-group-xs btn-group-vertical">
            <button name="MoveUp" type="button" class="btn btn-default" data-toggle="MoveItemUp" title="Move this parameter up"><span class="glyphicon glyphicon-chevron-up"></span></button>
            <button name="MoveDown" type="button" class="btn btn-default" data-toggle="MoveItemDown" title="Move this parameter down"><span class="glyphicon glyphicon-chevron-down"></span></button>
        </div>
    </div>
</div>
