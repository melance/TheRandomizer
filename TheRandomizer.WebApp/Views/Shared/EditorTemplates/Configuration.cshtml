
@model TheRandomizer.Generators.Parameter.Configuration
<div class="form-group row" name="Parameter" data-item-row>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", @title = "The name of the parameter used to reference the parameter in the generator." })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.DisplayName, htmlAttributes: new { @class = "form-control", @title = "The name to show the user of the generator." })
        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.EnumDropDownListFor(model => model.Type, "", new { @class = "form-control", @title = "The type of parameter." })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.TextBoxFor(model => model.Value, htmlAttributes: new { @class = "form-control", @title = "The default value of this parameter." })
        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-3">
        @Html.TextBoxFor(model => model.OptionList, htmlAttributes: new { @class = "form-control", @title = "A comma separated list of options for List type parameters.\n If desired, a bar can be placed between a Value and Display for the option such as 'HE|Half-Elf'" })
        @Html.ValidationMessageFor(model => model.OptionList, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-1">
        <button type="button" name="DeleteParameter" data-toggle="DeleteItem" class="btn btn-default btn-sm" title="Delete Parameter"><span class="glyphicon glyphicon-remove"></span></button>
        <div class="btn-group btn-group-xs btn-group-vertical">
            <button name="MoveUp" type="button" data-toggle="MoveItemUp" class="btn btn-default" title="Move this parameter up"><span class="glyphicon glyphicon-chevron-up"></span></button>
            <button name="MoveDown" type="button" data-toggle="MoveItemDown" class="btn btn-default" title="Move this parameter down"><span class="glyphicon glyphicon-chevron-down"></span></button>
        </div>
    </div>
</div>